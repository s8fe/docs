"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[140],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,d=m["".concat(l,".").concat(p)]||m[p]||h[p]||o;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2201:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:21},i=void 0,s={unversionedId:"Contracts/Market/NRC-21 NFT Market",id:"Contracts/Market/NRC-21 NFT Market",title:"NRC-21 NFT Market",description:"Buy and sell NFTs with market mechanisms such as fixed price listing, auction, providing stake-based, manual white-listing mechanism and fair launch features.",source:"@site/docs/Contracts/Market/NRC-21 NFT Market.md",sourceDirName:"Contracts/Market",slug:"/Contracts/Market/NRC-21 NFT Market",permalink:"/docs/Contracts/Market/NRC-21 NFT Market",draft:!1,editUrl:"https://github.com/Newcoin-Foundation/docs/tree/main/packages/docs/Contracts/Market/NRC-21 NFT Market.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21},sidebar:"tutorialSidebar",previous:{title:"NRC-20 Token",permalink:"/docs/Contracts/Market/NRC-20 Token"},next:{title:"NRC-22 MainPool",permalink:"/docs/Contracts/Market/NRC-22 MainPool"}},l={},c=[{value:"Create Auction",id:"create-auction",level:2},{value:"Edit Auction",id:"edit-auction",level:2},{value:"Erase Auction",id:"erase-auction",level:2},{value:"Place an auction bid",id:"place-an-auction-bid",level:2},{value:"Claim the winning Bid as a seller",id:"claim-the-winning-bid-as-a-seller",level:2},{value:"Claim the NFTs when you won the auction",id:"claim-the-nfts-when-you-won-the-auction",level:2}],u={toc:c};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Buy and sell NFTs with market mechanisms such as fixed price listing, auction, providing stake-based, manual white-listing mechanism and fair launch features."),(0,a.kt)("h2",{id:"create-auction"},"Create Auction"),(0,a.kt)("p",null,"Creates an public NFT Auction.\nThe NFT's to sell need all be in one collection, and these need to match.",(0,a.kt)("br",{parentName:"p"}),"\n","During the auction, the NFT ownership will be transferred to the contract itself.",(0,a.kt)("br",{parentName:"p"}),"\n","The system supports standard, as well as dutch auctions. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'nco.createAuction({ \n            accountName: "satoshi.io", //the owner of the assets and seller of the NFT\'s\n            assetIds: ["1234","456"], //string[], need to be in the collection\n            collection: "My First NFT Collection", //the name of the collection that contains the NFT\'s\n            auctionType: 1, //0 = Regular auction, 1 = Dutch auction\n            minPrice: 10.0000, //minimum price, number\n            buyNowPrice: 100.0000, //can be undefined, number\n            priceToken: "NCO", \n            precision: 2, //decimal, how many commas the price can have.\n            startDateMs,\n            endDateMs,\n            discountRate: 0.1, //set this for 0 on standard auctions. The rate in which the price of a Dutch auction is droped (0 - 1). e.g. 10% = 0.1\n            discountInterval: 0.1 //set this for 0 on standard auctions. The time interval in seconds in which the Dutch auction price is dropped. e.g. Price drop every hour = 3600\n            requestPermission: "", //string, can be undefined\n            marketplace: "", //can be undefined, currently unused.\n\n    }).catch((reason) => {\n        console.log("Blockchain Error: " + reason);\n    }).then((res: any ) => {\n        if(res){\n            console.log("transaction: {0}", res.TxID)\n            console.log("full response: ",res)\n        } else {\n            console.log("NO RESULT seems error has occured")\n        }\n    })\n')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: private key, Errors: auth"),(0,a.kt)("p",null,"Requires: Authorization from Account "),(0,a.kt)("p",null,"Errors: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Invalid checksum ..."'),": Authentication Error - probably that payer & Payer private key do not match"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: transaction declares authority ..."'),": Authentication Error - seems the payer and private key do not match."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Name should be less than 13 characters,..."'),": Check Collection Name, Schema Name, Template Name to be only lowercase and less than 13 chars long."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: assertion failure with message: collection names must be 12 characters long"'),': Collection names must be exactly 12 char long and only contains lowercase characters or "."'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: assertion failure with message: When the collection name has a suffix, the suffix authorization is required"'),":Remove the . characters from the name, or provide the authorization first."))),(0,a.kt)("h2",{id:"edit-auction"},"Edit Auction"),(0,a.kt)("p",null,"Edits an auction.",(0,a.kt)("br",{parentName:"p"}),"\n","Please have in mind, that this creates a new auctionId  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'nco.editAuction({ \n            auctionId: "1234", //the original auction ID you want to edit. you need to be owner\n            accountName: "satoshi.io", //the owner of the assets and seller of the NFT\'s\n            assetIds: ["1234","456"], //string[], need to be in the collection\n            collection: "My First NFT Collection", //the name of the collection that contains the NFT\'s\n            auctionType: 1, //0 = Regular auction, 1 = Dutch auction\n            minPrice: 10.0000, //minimum price, number\n            buyNowPrice: 100.0000, //can be undefined, number\n            priceToken: "NCO", \n            precision: 2, //decimal, how many commas the price can have.\n            startDateMs,\n            endDateMs,\n            discountRate: 0.1, //set this for 0 on standard auctions. The rate in which the price of a Dutch auction is droped (0 - 1). e.g. 10% = 0.1\n            discountInterval: 0.1 //set this for 0 on standard auctions. The time interval in seconds in which the Dutch auction price is dropped. e.g. Price drop every hour = 3600\n            requestPermission: "", //string, can be undefined\n            marketplace: "", //can be undefined, currently unused.\n\n    }).catch((reason) => {\n        console.log("Blockchain Error: " + reason);\n    }).then((res: any ) => {\n        if(res){\n            console.log("transaction: {0}", res.TxID)\n            console.log("full response: ",res)\n        } else {\n            console.log("NO RESULT seems error has occured")\n        }\n    })\n')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: private key, Errors: auth"),(0,a.kt)("p",null,"Requires: Authorization from Account "),(0,a.kt)("p",null,"Errors: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Invalid checksum ..."'),": Authentication Error - probably that payer & Payer private key do not match"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: transaction declares authority ..."'),": Authentication Error - seems the payer and private key do not match."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Name should be less than 13 characters,..."'),": Check Collection Name, Schema Name, Template Name to be only lowercase and less than 13 chars long."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: assertion failure with message: collection names must be 12 characters long"'),': Collection names must be exactly 12 char long and only contains lowercase characters or "."'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: assertion failure with message: When the collection name has a suffix, the suffix authorization is required"'),":Remove the . characters from the name, or provide the authorization first."))),(0,a.kt)("h2",{id:"erase-auction"},"Erase Auction"),(0,a.kt)("p",null,"Erases an auction, as long as the auction has no bids.  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'nco.eraseAuction({ \n    \n            requestPermission?: string;\n            auctionId: string;\n            accountName: "satoshi.io", //the owner of the assets and seller of the NFT\'s\n\n    }).catch((reason) => {\n        console.log("Blockchain Error: " + reason);\n    }).then((res: any ) => {\n        if(res){\n            console.log("transaction: {0}", res.TxID)\n            console.log("full response: ",res)\n        } else {\n            console.log("NO RESULT seems error has occured")\n        }\n    })\n')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: private key, Errors: auth"),(0,a.kt)("p",null,"Requires: Authorization from Account "),(0,a.kt)("p",null,"Errors: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Invalid checksum ..."'),": Authentication Error - probably that payer & Payer private key do not match"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: transaction declares authority ..."'),": Authentication Error - seems the payer and private key do not match."))),(0,a.kt)("h2",{id:"place-an-auction-bid"},"Place an auction bid"),(0,a.kt)("p",null,"Erases an auction, as long as the auction has no bids.  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'nco.placeAuctionBid({ \n        accountName: "satoshi.io", //the owner of the assets and seller of the NFT\'s\n        auctionId: "12345"; //the auction you are bidding on.\n        amount: 10.0, //Number of the Bid.\n        symbol: "", // The Token you want to pay in. Needs to be whitelisted during CreateAuction\n        decimals: 2; //how many commas the amount can have\n        marketplace?: string;\n        requestPermission?: string;\n\n    }).catch((reason) => {\n        console.log("Blockchain Error: " + reason);\n    }).then((res: any ) => {\n        if(res){\n            console.log("transaction: {0}", res.TxID)\n            console.log("full response: ",res)\n        } else {\n            console.log("NO RESULT seems error has occured")\n        }\n    })\n')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: private key, Errors: auth"),(0,a.kt)("p",null,"Requires: Authorization from Account "),(0,a.kt)("p",null,"Errors: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Invalid checksum ..."'),": Authentication Error - probably that payer & Payer private key do not match"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: transaction declares authority ..."'),": Authentication Error - seems the payer and private key do not match."))),(0,a.kt)("h2",{id:"claim-the-winning-bid-as-a-seller"},"Claim the winning Bid as a seller"),(0,a.kt)("p",null,"Retrieve your earnings "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'nco.claimAuctionWinBid({ \n        accountName: "satoshi.io", //the owner of the assets and seller of the NFT\'s\n        requestPermission?: string;\n        auctionId: "12345"; //the auction you are claiming.\n\n    }).catch((reason) => {\n        console.log("Blockchain Error: " + reason);\n    }).then((res: any ) => {\n        if(res){\n            console.log("transaction: {0}", res.TxID)\n            console.log("full response: ",res)\n        } else {\n            console.log("NO RESULT seems error has occured")\n        }\n    })\n')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: private key, Errors: auth"),(0,a.kt)("p",null,"Requires: Authorization from Account "),(0,a.kt)("p",null,"Errors: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Invalid checksum ..."'),": Authentication Error - probably that payer & Payer private key do not match"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: transaction declares authority ..."'),": Authentication Error - seems the payer and private key do not match."))),(0,a.kt)("h2",{id:"claim-the-nfts-when-you-won-the-auction"},"Claim the NFTs when you won the auction"),(0,a.kt)("p",null,"Retrieve your new NFTs   "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'nco.claimNftsFromAuction({ \n        accountName: "satoshi.io", //the user of the winning bid\n        requestPermission?: string;\n        auctionId: "12345"; //the auction you are claiming.\n\n    }).catch((reason) => {\n        console.log("Blockchain Error: " + reason);\n    }).then((res: any ) => {\n        if(res){\n            console.log("transaction: {0}", res.TxID)\n            console.log("full response: ",res)\n        } else {\n            console.log("NO RESULT seems error has occured")\n        }\n    })\n')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: private key, Errors: auth"),(0,a.kt)("p",null,"Requires: Authorization from Account "),(0,a.kt)("p",null,"Errors: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: Invalid checksum ..."'),": Authentication Error - probably that payer & Payer private key do not match"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},'"Error: transaction declares authority ..."'),": Authentication Error - seems the payer and private key do not match."))))}h.isMDXComponent=!0}}]);